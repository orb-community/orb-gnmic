name: orb-gnmic-main

on:
  workflow_dispatch:

  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  pre-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Generate ref tag (latest)
        run: |
          echo "REF_TAG=latest" >> $GITHUB_ENV

      - name: get gnmic
        run: make getgnmic

      - name: Build binnary (go build only)
        run: make build

      - name: Get VERSION
        shell: bash
        run: |
          version=$(runner/gnmic version | cut -d ' ' -f 3 | cut -d ':' -f 1)
          echo $version > VERSION.txt

      - name: Store VERSION
        uses: actions/upload-artifact@v3
        with:
          name: VERSION
          path: VERSION.txt
          retention-days: 1

  package:
    if: ${{ github.event_name != 'pull_request' }}
    needs: [pre-build]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Generate ref tag (latest)
        run: |
          echo "REF_TAG=latest" >> $GITHUB_ENV

      - name: Download VERSION
        uses: actions/download-artifact@v3
        with:
          name: VERSION

      - name: Get VERSION
        shell: bash
        run: |
          echo "VERSION=`cat VERSION.txt`" >> $GITHUB_ENV

      - name: Debug version
        run: echo ${{ env.VERSION }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build orb gnmic container
        shell: bash
        run: |
          make container

      - name: Push orb-gnmic container
        run: |
          docker push -a ghcr.io/orb-community/orb-gnmic
